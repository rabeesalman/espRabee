////////////شرف
#include <Wire.h>
#include <EEPROM.h>
#include <Arduino.h>

double xtemp = 0.0, R2;
bool lamp = false;
bool fan = false, water = false, door = false, eg = false;
uint8_t cnt;
float h;
float temp = 0.0, hum = 0.0;
char x[24];
char _data[sizeof(float)];
float g[3];
long tim = 0;
String num;
int eeAddress = 0;
bool save_signal = 0;
// int counter = 0;
unsigned long sig = 0;

struct data_tobe_send
{ ////size 18
  float TEMP;
  uint8_t HUMI;
  uint8_t COUNTER;
  uint8_t DAYS;
  bool FAN;
  bool BATT;
  bool DOOR;
  bool LAMP;
  bool WATER;
  bool EGG;

} data = {0.0f, 0, 0, 0, 0, 0, 0, 0, 0, 0};
//  {0.0f, 0.0f, 0, 0, 0, 0, 0, 0, 0, 0};

struct epromsaved
{
  float SETTMP;
  float TMPHI;
  float TMPLO;
  uint8_t PERIOD; //IN HOURS
  uint8_t HHI;
  uint8_t HLO;
  uint8_t HACHIN;
  bool TURN;

} factory_defult = {37.5f, 37.9f, 37.3f, 8, 70, 40, 21, 1};
//  {37.5f, 37.9f, 37.1f, 8, 70, 40, 21, 1};
epromsaved custom = {0.0f, 0.0f, 0.0f, 0, 0, 0, 0, 0};
epromsaved data_to_save = {0.0f, 0.0f, 0.0f, 0, 0, 0, 0, 0};

double stien_three(byte Thermistor_Pin, float Rdivid, float A, float B, float C)
{
  int Vo;
  double lnR2, T;
  double sum = 0.0;
  for (uint8_t i = 0; i < 100; i++)
  {
    Vo = analogRead(Thermistor_Pin);
    R2 = Rdivid * (1024.0 / (float)Vo - 1.0); /// NTC resistance connected between Vcc & ADC Pin
    lnR2 = log(R2);
    T = 1 / (A + B * lnR2 + C * lnR2 * lnR2 * lnR2);
    T = (T - 273.15);
    sum = T + sum;
  }
  T = sum / 100.00;
  return T;
}

void saving_data()
{
  if (!Wire.available() && millis() - sig >= 5000 && save_signal)
  {
    sig = millis();
    save_signal = 0;
    EEPROM.begin();
    eeAddress = 0;
    eeAddress += sizeof(float);
    EEPROM.put(eeAddress, data_to_save);
    eeAddress = sizeof(float);
    EEPROM.get(eeAddress, custom);
    // counter++;
  }
  // Serial.print(g[0]);           ////float SETTMP;
  // Serial.print(g[1]);           //// float TMPHI;
  // Serial.print(g[2]);           // float TMPLO;
  // Serial.print(toascii(x[16])); // HHI;
  // Serial.print(toascii(x[17])); //HLO;
  // Serial.print(toascii(x[18])); //PERIOD; //IN HOURS
  // Serial.print(toascii(x[19])); ///HACHIN;
  // Serial.print(toascii(x[20])); //turn
  // Serial.println("");
}

void on_Request() ///on Request do this
{
  switch (x[0])
  {
  case 'p':
    Wire.write((byte *)(&custom), sizeof(custom));
    break;

  case 'd':

    Wire.write((byte *)(&data), sizeof(data));
    break;

  case 's':

    // Wire.write((byte *)(&custom), sizeof(custom));
    break;
  default:
    break;
  }
}

void receiveEvent(int howMany)
{
  String espdata = "";

  if (Wire.available() > 0)
  {

    for (unsigned int i = 0; i < sizeof(x); i++)
    {
      x[i] = Wire.read();
    }
  }
  if (x[0] == 's')
  {
    for (unsigned int j = 1; j < 4; j++)
    {
      for (unsigned int i = 0; i < sizeof(float); i++)
      {
        _data[i] = x[i + (4 * j)];
      }
      memcpy(&g[j - 1], _data, sizeof(float));
    }
    data_to_save.SETTMP = g[0];
    data_to_save.TMPHI = g[1];
    data_to_save.TMPLO = g[2];
    data_to_save.PERIOD = toascii(x[18]); //IN HOURS
    data_to_save.HHI = toascii(x[16]);
    data_to_save.HLO = toascii(x[17]);
    data_to_save.HACHIN = toascii(x[19]);
    data_to_save.TURN = toascii(x[20]);
    save_signal = 1;
  }
}

void update_data()
{
  hum = stien_three(A0, 5000.0, 1.3516310247E-03, 2.2482518487E-04, 1.4162754355E-07);
  xtemp = stien_three(A3, 5000.0, 1.3516310247E-03, 2.2482518487E-04, 1.4162754355E-07);
  h = int(hum);
  int xx = xtemp * 100;
  int total = xx % 100;
  int yy = xx / 100;
  temp = (yy + total / 100.0);
  data.COUNTER = cnt;
  data.DAYS = 5;
  data.DOOR = door;
  data.FAN = fan;
  data.EGG = eg;
  data.LAMP = lamp;
  data.WATER = water;
  data.BATT = false;
  data.TEMP = xtemp;
  data.HUMI = h;
  // data.HUMI = counter;
}

void setup()
{
  Serial.begin(115200);
  EEPROM.begin();
  //////////////////////////
  // eeAddress += sizeof(float);
  // EEPROM.put(eeAddress, factory_defult);
  /////////////////////////////////////////////
  eeAddress = sizeof(float);
  EEPROM.get(eeAddress, custom);
  Wire.begin(8);
  Wire.onReceive(receiveEvent);
  Wire.onRequest(on_Request);
  pinMode(A3, INPUT);
  pinMode(A2, OUTPUT);
  pinMode(A1, OUTPUT);
  pinMode(A0, INPUT);
  digitalWrite(A2, HIGH);
  digitalWrite(A1, HIGH);
  update_data();
  tim = millis();
}

void loop()
{
  saving_data();
  if (millis() - tim >= 1000)
  {
    cnt++;
    update_data();
    // saving_data();
    tim = millis();
  }

  if (cnt < 10 && cnt > 0)
  {
    lamp = true;
    fan = true;
    door = true;
    water = true;
    eg = true;
  }
  if (cnt < 20 && cnt > 10)
  {
    lamp = true;
    fan = false;
    door = true;
    water = false;
  }
  if (cnt < 30 && cnt > 20)
  {
    lamp = false;
    fan = true;
    door = false;
    water = true;
    eg = false;
  }
  if (cnt < 40 && cnt > 30)
  {
    lamp = false;
    fan = false;
    door = false;
    water = false;
    eg = true;
  }
  if (cnt > 40)
  {
    lamp = true;
    fan = true;
    door = true;
    water = true;
    eg = false;
  }
  if (cnt >= 60)
  {
    cnt = 0;
  }
}
